exercise_tertile = ntile(percent_with_access_to_exercise_opportunities, 3) %>%
factor(levels = 1:3,
labels = c("Low","Mid","High"))
)
columns(measure_df)
first_column <- measure_df[, 1]
print(first_column)
first_row_head <- head(measure_df, n = 1)
print(first_row_head)
colnames(measure_df)
full_df <- measure_df %>%
inner_join(
addl_df %>%
select(fips,
percent_with_access_to_exercise_opportunities,
everything()),
by = "fips"
) %>%
mutate(
exercise_tertile = ntile(percent_with_access_to_exercise_opportunities, 3) %>%
factor(levels = 1:3,
labels = c("Low","Mid","High"))
)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
excel_sheets(file_path)
addl_df   <- read_excel(path, sheet = "Additional Measure Data") %>% clean_names()
addl_df   <- read_excel(file_path, sheet = "Additional Measure Data") %>% clean_names()
addl_df   <- read_excel(file_path, sheet = "Additional Measure Data") %>% clean_names()
measure_df <- read_excel(file_path, sheet = "Select Measure Data")    %>% clean_names()
full_df <- measure_df %>%
inner_join(
addl_df %>%
select(fips,
percent_with_access_to_exercise_opportunities,
everything()),
by = "fips"
) %>%
mutate(
exercise_tertile = ntile(percent_with_access_to_exercise_opportunities, 3) %>%
factor(levels = 1:3, labels = c("Low","Mid","High"))
)
file_path <- "D:/OneDrive - University of Virginia/Will M/Undergraduate Research Courses-Grants/Summer 2025/Introduction to Regression Analysis (STAT 3220)/Final Project/3220-Final-Project/2025 County Health Rankings Virginia Data - v3.xlsx"
excel_sheets(file_path)
addl_df   <- read_excel(file_path, sheet = "Additional Measure Data") %>% clean_names()
measure_df <- read_excel(file_path, sheet = "Select Measure Data")    %>% clean_names()
full_df <- addl_df %>%
inner_join(
measure_df %>%
select(fips,
percent_with_access_to_exercise_opportunities,
everything()),
by = "fips"
) %>%
mutate(
exercise_tertile = ntile(percent_with_access_to_exercise_opportunities, 3) %>%
factor(levels = 1:3, labels = c("Low","Mid","High"))
)
addl_df <- addl_df %>%
filter(!is.na(county) & county != "NA")
summary(addl_df$life_expectancy)
ggplot(addl_df, aes(x = life_expectancy)) +
geom_histogram(binwidth = 1, fill = "steelblue", colour = "white") +
labs(title = "Distribution of Life Expectancy Across Virginia Counties (2025)",
x     = "Life Expectancy (years)",
y     = "Number of Counties") +
theme_minimal()
ggplot(full_df, aes(x = median_household_income, y = life_expectancy)) +
geom_point(colour = "steelblue", alpha = 0.8) +
geom_smooth(method = "loess", se = FALSE, colour = "darkred") +
scale_x_continuous(labels = dollar_format()) +
labs(title = "Life Expectancy vs. Median Household Income",
x = "Median Household Income (USD)",
y = "Life Expectancy (years)") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
library(ggplot2)
library(janitor)
file_path <- "D:/OneDrive - University of Virginia/Will M/Undergraduate Research Courses-Grants/Summer 2025/Introduction to Regression Analysis (STAT 3220)/Final Project/3220-Final-Project/2025 County Health Rankings Virginia Data - v3.xlsx"
excel_sheets(file_path)
addl_df   <- read_excel(file_path, sheet = "Additional Measure Data") %>% clean_names()
measure_df <- read_excel(file_path, sheet = "Select Measure Data")    %>% clean_names()
full_df <- addl_df %>%
inner_join(
measure_df %>%
select(fips,
percent_with_access_to_exercise_opportunities,
everything()),
by = "fips"
) %>%
mutate(
exercise_tertile = ntile(percent_with_access_to_exercise_opportunities, 3) %>%
factor(levels = 1:3, labels = c("Low","Mid","High"))
)
addl_df <- addl_df %>%
filter(!is.na(county) & county != "NA")
summary(addl_df$life_expectancy)
ggplot(addl_df, aes(x = life_expectancy)) +
geom_histogram(binwidth = 1, fill = "steelblue", colour = "white") +
labs(title = "Distribution of Life Expectancy Across Virginia Counties (2025)",
x     = "Life Expectancy (years)",
y     = "Number of Counties") +
theme_minimal()
ggplot(full_df, aes(x = median_household_income, y = life_expectancy)) +
geom_point(colour = "steelblue", alpha = 0.8) +
geom_smooth(method = "loess", se = FALSE, colour = "darkred") +
scale_x_continuous(labels = dollar_format()) +
labs(title = "Life Expectancy vs. Median Household Income",
x = "Median Household Income (USD)",
y = "Life Expectancy (years)") +
theme_minimal()
library(scales)
ggplot(full_df, aes(x = median_household_income, y = life_expectancy)) +
geom_point(colour = "steelblue", alpha = 0.8) +
geom_smooth(method = "loess", se = FALSE, colour = "darkred") +
scale_x_continuous(labels = dollar_format()) +
labs(title = "Life Expectancy vs. Median Household Income",
x = "Median Household Income (USD)",
y = "Life Expectancy (years)") +
theme_minimal()
ggplot(full_df, aes(x = primary_care_physician_ratio, y = life_expectancy)) +
geom_point(colour = "forestgreen", alpha = 0.8) +
geom_smooth(method = "loess", se = FALSE, colour = "black") +
scale_x_reverse() +
labs(title = "Life Expectancy vs. Primary-Care Physician Ratio",
x = "Population per Primary-Care Physician (higher = fewer physicians)",
y = "Life Expectancy (years)") +
theme_minimal()
colnames(measure_df)
ggplot(full_df, aes(x = primary_care_physicians_ratio, y = life_expectancy)) +
geom_point(colour = "forestgreen", alpha = 0.8) +
geom_smooth(method = "loess", se = FALSE, colour = "black") +
scale_x_reverse() +
labs(title = "Life Expectancy vs. Primary-Care Physician Ratio",
x = "Population per Primary-Care Physician (higher = fewer physicians)",
y = "Life Expectancy (years)") +
theme_minimal()
colnames(measure_df, "primary_care_physicians_ratio")
full_df <- addl_df %>%
inner_join(
measure_df %>%
select(fips,
percent_with_access_to_exercise_opportunities,
everything()),
by = "fips"
) %>%
mutate(
exercise_tertile = ntile(percent_with_access_to_exercise_opportunities, 3) %>%
factor(levels = 1:3, labels = c("Low","Mid","High"))
)
```{r}
full_df <- addl_df %>%
inner_join(
measure_df %>%
select(fips,
percent_with_access_to_exercise_opportunities,
everything()),
by = "fips"
) %>%
mutate(
exercise_tertile = ntile(percent_with_access_to_exercise_opportunities, 3) %>%
factor(levels = 1:3, labels = c("Low","Mid","High"))
) %>%
mutate(
primary_care_physicians_ratio =
as.numeric(sub(":1$", "", primary_care_physicians_ratio)))
ggplot(full_df, aes(x = primary_care_physicians_ratio, y = life_expectancy)) +
geom_point(colour = "forestgreen", alpha = 0.8) +
geom_smooth(method = "loess", se = FALSE, colour = "black") +
scale_x_reverse() +
labs(title = "Life Expectancy vs. Primary-Care Physician Ratio",
x = "Population per Primary-Care Physician (higher = fewer physicians)",
y = "Life Expectancy (years)") +
theme_minimal()
ggplot(full_df, aes(x = adult_obesity, y = life_expectancy)) +
geom_point(colour = "tomato", alpha = 0.8) +
geom_smooth(method = "loess", se = FALSE, colour = "black") +
labs(title = "Life Expectancy vs. Adult Obesity",
x = "Adult Obesity (%)",
y = "Life Expectancy (years)") +
theme_minimal()
colnames(measure_df)
colnames(full_df)
ggplot(full_df, aes(x = percent_adults_with_obesity, y = life_expectancy)) +
geom_point(colour = "tomato", alpha = 0.8) +
geom_smooth(method = "loess", se = FALSE, colour = "black") +
labs(title = "Life Expectancy vs. Adult Obesity",
x = "Adult Obesity (%)",
y = "Life Expectancy (years)") +
theme_minimal()
ggplot(full_df, aes(x = adult_obesity, y = life_expectancy,
colour = exercise_tertile)) +
geom_point(size = 2, alpha = 0.8) +
scale_colour_brewer(palette = "Dark2", name = "Exercise Access") +
facet_wrap(~ exercise_tertile, nrow = 1) +
labs(title = "Life Expectancy vs. Obesity by Exercise-Access Tertile",
x = "Adult Obesity (%)",
y = "Life Expectancy (years)") +
theme_minimal()
ggplot(full_df, aes(x = percent_adults_with_obesity, y = life_expectancy,
colour = exercise_tertile)) +
geom_point(size = 2, alpha = 0.8) +
scale_colour_brewer(palette = "Dark2", name = "Exercise Access") +
facet_wrap(~ exercise_tertile, nrow = 1) +
labs(title = "Life Expectancy vs. Obesity by Exercise-Access Tertile",
x = "Adult Obesity (%)",
y = "Life Expectancy (years)") +
theme_minimal()
ggplot(full_df, aes(x = urbanization, y = life_expectancy, fill = urbanization)) +
geom_boxplot(alpha = 0.7, colour = "grey30") +
scale_fill_manual(values = c("#1f78b4", "#33a02c")) +
labs(title = "Life Expectancy by Urbanization Status",
x = "",
y = "Life Expectancy (years)") +
theme_minimal() +
theme(legend.position = "none")
ggplot(full_df, aes(x = percent_rural, y = life_expectancy, fill = urbanization)) +
geom_boxplot(alpha = 0.7, colour = "grey30") +
scale_fill_manual(values = c("#1f78b4", "#33a02c")) +
labs(title = "Life Expectancy by Urbanization Status",
x = "",
y = "Life Expectancy (years)") +
theme_minimal() +
theme(legend.position = "none")
ggplot(full_df, aes(x = percent_rural, y = life_expectancy, fill = percent_rural)) +
geom_boxplot(alpha = 0.7, colour = "grey30") +
scale_fill_manual(values = c("#1f78b4", "#33a02c")) +
labs(title = "Life Expectancy by Urbanization Status",
x = "",
y = "Life Expectancy (years)") +
theme_minimal() +
theme(legend.position = "none")
ggplot(full_df, aes(x = percent_rural, y = life_expectancy, fill = percent_rural)) +
geom_boxplot(alpha = 0.7, colour = "grey30") +
scale_fill_manual(values = c("#1f78b4", "#33a02c")) +
labs(title = "Life Expectancy by Rural Status",
x = "",
y = "Life Expectancy (years)") +
theme_minimal() +
theme(legend.position = "none")
full_df <- addl_df %>%
inner_join(
measure_df %>%
select(fips,
percent_with_access_to_exercise_opportunities,
everything()),
by = "fips"
) %>%
mutate(
exercise_tertile = ntile(percent_with_access_to_exercise_opportunities, 3) %>%
factor(levels = 1:3, labels = c("Low","Mid","High"))
) %>%
mutate(
primary_care_physicians_ratio =
as.numeric(sub(":1$", "", primary_care_physicians_ratio))) %>%
mutate(rural_band = cut(percent_rural,
breaks = c(-Inf, 25, 50, 75, 100),
labels = c("0–25 %", "26–50 %", "51–75 %", "76–100 %"),
right = TRUE, ordered_result = TRUE))
ggplot(full_df, aes(x = percent_rural, y = life_expectancy, fill = percent_rural)) +
geom_boxplot(alpha = 0.7, colour = "grey30") +
scale_fill_manual(values = c("#1f78b4", "#33a02c")) +
labs(title = "Life Expectancy by Rural Status",
x = "",
y = "Life Expectancy (years)") +
theme_minimal() +
theme(legend.position = "none")
ggplot(full_df,
aes(x = rural_status,
y = life_expectancy,
fill = rural_status)) +
geom_boxplot(alpha = 0.7, colour = "grey30") +
scale_fill_manual(values = c("#1f78b4", "#33a02c")) +
labs(title = "Life Expectancy by Rural Status",
x = "",
y = "Life Expectancy (years)") +
theme_minimal() +
theme(legend.position = "none")
ggplot(full_df,
aes(x = rural_band,
y = life_expectancy,
fill = rural_band)) +
geom_boxplot(alpha = 0.7, colour = "grey30") +
scale_fill_manual(values = c("#1f78b4", "#33a02c")) +
labs(title = "Life Expectancy by Rural Status",
x = "",
y = "Life Expectancy (years)") +
theme_minimal() +
theme(legend.position = "none")
full_df <- addl_df %>%
inner_join(
measure_df %>%
select(fips,
percent_with_access_to_exercise_opportunities,
everything()),
by = "fips"
) %>%
mutate(
exercise_tertile = ntile(percent_with_access_to_exercise_opportunities, 3) %>%
factor(levels = 1:3, labels = c("Low","Mid","High"))
) %>%
mutate(
primary_care_physicians_ratio =
as.numeric(sub(":1$", "", primary_care_physicians_ratio))) %>%
mutate(rural_band = cut(percent_rural,
breaks = c(-Inf, 25, 50, 75, 100),
labels = c("0–25 %", "26–50 %", "51–75 %", "76–100 %"),
right = TRUE, ordered_result = TRUE))
ggplot(full_df,
aes(x = rural_band,
y = life_expectancy,
fill = rural_band)) +
geom_boxplot(alpha = 0.7, colour = "grey30") +
scale_fill_manual(values = c("#1f78b4", "#33a02c")) +
labs(title = "Life Expectancy by Rural Status",
x = "",
y = "Life Expectancy (years)") +
theme_minimal() +
theme(legend.position = "none")
rlang::last_trace()
rlang::last_trace(drop = FALSE)
library(ggplot2)
rural_cols <- c("0–25 %"  = "#1f78b4",
"26–50 %" = "#33a02c",
"51–75 %" = "#a6d854",
"76–100 %"= "#66c2a5")
ggplot(full_df,
aes(x = rural_band,
y = life_expectancy,
fill = rural_band)) +
geom_boxplot(alpha = 0.7, colour = "grey30") +
scale_fill_manual(values = rural_cols, guide = "none") +
labs(title = "Life Expectancy by Rural Status",
x = "",
y = "Life Expectancy (years)") +
theme_minimal()
num_vars <- full_df %>%
select(life_expectancy,
median_household_income,
adult_obesity,
primary_care_physician_ratio,
premature_age_adjusted_mortality,
income_inequality,
access_to_exercise_opportunities) %>%
drop_na()
library(tidyr)
num_vars <- full_df %>%
select(life_expectancy,
median_household_income,
adult_obesity,
primary_care_physician_ratio,
premature_age_adjusted_mortality,
income_inequality,
access_to_exercise_opportunities) %>%
drop_na()
num_vars <- full_df %>%
select(life_expectancy,
median_household_income,
percent_adults_with_obesity,
primary_care_physicians_ratio,
age_adjusted_death_rate,
income_ratio,
percent_with_access_to_exercise_opportunities) %>%
drop_na()
corr_mat <- round(cor(num_vars), 2)
melt(corr_mat) %>%
ggplot(aes(Var1, Var2, fill = value)) +
geom_tile(colour = "white") +
geom_text(aes(label = sprintf("%.2f", value)), size = 3) +
scale_fill_gradient2(low = "firebrick",
mid = "white",
high = "steelblue",
midpoint = 0,
limits = c(-1, 1),
name = "Pearson r") +
labs(title = "Correlation Heat-map of Key Quantitative Predictors",
x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
library(ggplot2)
library(janitor)
library(scales)
library(tidyr)
library(reshape)
library(Reshape)
install.packages('reshape')
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
library(ggplot2)
library(janitor)
library(scales)
library(tidyr)
library(Reshape)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
library(ggplot2)
library(janitor)
library(scales)
library(tidyr)
library(reshape)
num_vars <- full_df %>%
select(life_expectancy,
median_household_income,
percent_adults_with_obesity,
primary_care_physicians_ratio,
age_adjusted_death_rate,
income_ratio,
percent_with_access_to_exercise_opportunities) %>%
drop_na()
corr_mat <- round(cor(num_vars), 2)
melt(corr_mat) %>%
ggplot(aes(Var1, Var2, fill = value)) +
geom_tile(colour = "white") +
geom_text(aes(label = sprintf("%.2f", value)), size = 3) +
scale_fill_gradient2(low = "firebrick",
mid = "white",
high = "steelblue",
midpoint = 0,
limits = c(-1, 1),
name = "Pearson r") +
labs(title = "Correlation Heat-map of Key Quantitative Predictors",
x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
num_vars <- full_df %>%
select(life_expectancy,
median_household_income,
percent_adults_with_obesity,
primary_care_physicians_ratio,
age_adjusted_death_rate,
income_ratio,
percent_with_access_to_exercise_opportunities) %>%
drop_na()
corr_mat <- round(cor(num_vars), 2)
melt(corr_mat) %>%
ggplot(aes(Var1, Var2, fill = value)) +
geom_tile(colour = "white") +
geom_text(aes(label = sprintf("%.2f", value)), size = 3) +
scale_fill_gradient2(low = "firebrick",
mid = "white",
high = "steelblue",
midpoint = 0,
limits = c(-1, 1),
name = "Pearson r") +
labs(title = "Correlation Heat-map of Key Quantitative Predictors",
x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
```{r}
num_vars <- full_df %>%
select(life_expectancy,
median_household_income,
percent_adults_with_obesity,
primary_care_physicians_ratio,
age_adjusted_death_rate,
income_ratio,
percent_with_access_to_exercise_opportunities) %>%
drop_na()
corr_mat <- round(cor(num_vars), 2)
melt(corr_mat) %>%
ggplot(aes(Var1, Var2, fill = value)) +
geom_tile(colour = "white") +
geom_text(aes(label = sprintf("%.2f", value)), size = 3) +
scale_fill_gradient2(low = "firebrick",
mid = "white",
high = "steelblue",
midpoint = 0,
limits = c(-1, 1),
name = "Pearson r") +
labs(title = "Correlation Heat-map of Key Quantitative Predictors",
x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
rlang::last_trace()
rlang::last_trace(drop = FALSE)
corr_long <- corr_mat %>%
as.data.frame() %>%
rownames_to_column("Var1") %>%
pivot_longer(-Var1, names_to = "Var2", values_to = "value")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
library(ggplot2)
library(janitor)
library(scales)
library(tidyr)
library(reshape)
library(tibble)
corr_long <- corr_mat %>%
as.data.frame() %>%
rownames_to_column("Var1") %>%
pivot_longer(-Var1, names_to = "Var2", values_to = "value")
ggplot(corr_long, aes(Var1, Var2, fill = value)) +
geom_tile(colour = "white") +
geom_text(aes(label = sprintf("%.2f", value)), size = 3) +
scale_fill_gradient2(low = "firebrick",
mid = "white",
high = "steelblue",
midpoint = 0,
limits = c(-1, 1),
name = "Pearson r") +
labs(title = "Correlation Heat-map of Key Quantitative Predictors",
x = NULL, y = NULL) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
